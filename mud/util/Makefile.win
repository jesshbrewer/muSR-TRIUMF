# Makefile for mud_util.exe
#
#
#    Copyright (C) 1994-2010 TRIUMF (Vancouver, Canada)
#    Jon DeYoung
#
#    Released under the GNU LGPL - see http://www.gnu.org/licenses
#
#    This program is free software; you can distribute it and/or modify it under
#    the terms of the Lesser GNU General Public License as published by the Free
#    Software Foundation; either version 2 of the License, or any later version.
#    Accordingly, this program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
#    or FITNESS FOR A PARTICULAR PURPOSE. See the Lesser GNU General Public License
#    for more details.
#
# Created July 25, 2002
# By Jon DeYoung
#
# Examples:
#   make
#   make install
#   make clean
#

# The name of the .exe file to be created
APP      = mud_util
EXEFILE  = $(APP).exe

# The location for mud_util to be installed
BIN_DIR = ..\bin

# The object files to be created
OBJFILES = mud_util.obj getopt.obj tri2mud.obj mud2tri.obj dat2mud.obj mud2dat.obj \ 
	   mud2txt.obj tri2txt.obj combine.obj ral2mud.obj psi2mud.obj

# The location of the libraries needed
LIBFILES = ..\lib\mud.lib

# The location of the source files
SRC_DIR  = ..\src

# The name of the compiler/linker/...
.AUTODEPEND
BCC32   = bcc32
ILINK32 = ilink32

# Some flags
CFLAGS  = -c -I$(SRC_DIR) -w-pro -TC -D__MSDOS__
LFLAGS  = -x -Gn

# Not really sure about why this is needed, but it wouldn't compile without it.
# These files are located in the lib directory of your Borland install
# Here's what each one means:
# -Name-        -Description-                           -Other-
# c0d32.obj     DLL startup module                      
# c0d32w.obj    DLL startup module                      Wide-char version
# c0d32x.obj    DLL startup module                      No exception handling
# c0pkg.obj     Package startup module
# c0w32.obj     GUI EXE startup module
# c0w32w.obj    GUI EXE startup module                  Wide-char version
# c0x32.obj     32-bit console-mode EXE startup module
# c0x32w.obj    32-bit console-mode EXE startup module  Wide-char version

STDOBJS = c0x32.obj

# Again, not too sure about why these are needed, but here's a brief description:
#
# The RTL libs are
# cp32mt.lib                    VCL-compliant C RTL multithreaded static library
# cp3250mt.dll, cp32mti.lib     VCL-compliant import library for multithreaded C RTL
# cw32.lib                      RTL single-threaded static library
# cw3250.dll, cw32i.lib         Import library for RTL cw3250.dll
# cw32mt.lib                    RTL multi-threaded static library
# cw3250mt.dll, cw32mti.lib     Import library for multithreaded RTL cw3250mt.dll

# The 'p' in 'cp' means pascal. No need for that one. The 'i's stand for
# import library. mt stands for multi-threaded. For simplicity, you can stic
# to cw32.lib and cw32mt.lib for apps compiled with the free bc55.

STDLIBS = import32.lib cw32.lib

# The main target
$(EXEFILE) : $(OBJFILES)
    $(ILINK32) $(LFLAGS) $(OBJFILES) $(STDOBJS), $(EXEFILE), , \
      $(LIBFILES) $(STDLIBS), $(DEFFILE), $(RESFILES)

install:
    copy $(EXEFILE) $(BIN_DIR)    

clean:
    del *.obj *.res *.tds *.map *.exe

